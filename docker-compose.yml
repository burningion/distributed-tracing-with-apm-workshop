version: '3'
services:
  agent:
    image: "datadog/agent:6.5.2"
    environment:
      - DD_API_KEY
      - DD_APM_ENABLED=true
      # Add DD_APM_ANALYZED_SPANS to the Agent container environment.
      # Compatible with version 12.6.5250 or above.
      - DD_APM_ANALYZED_SPANS=users-api|express.request=1,sensors-api|flask.request=1,pumps-service|flask.request=1,iot-frontend|flask.request=1
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_AC_EXCLUDE='image:agent'
      - DD_TAGS='env:dev'
    ports:
      - "8126:8126"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    labels:
      com.datadoghq.ad.logs: '[{"source": "datadog-agent", "service": "agent"}]'

  frontend:
    environment:
      - FLASK_APP=api.py
      - FLASK_DEBUG=1
    build: .
    command: flask run --port=5000 --host=0.0.0.0
    ports:
      - "5000:5000"
    volumes:
      - "./frontend:/app"
    depends_on:
      - agent
      - db
    labels:
      com.datadoghq.ad.logs: '[{"source": "iot-frontend", "service": "iot-frontend"}}]'

  noder:
    build: ./node-api
    command: nodemon server.js
    ports:
      - "5004:5004"
    volumes:
      - "./node-api:/app"
    depends_on:
      - agent
      - frontend
      - redis
    environment:
      - DD_ENV=dev
    labels:
      com.datadoghq.ad.logs: '[{"source": "noder", "service": "noder"}]'
      
  pumps:
    environment:
      - FLASK_APP=thing.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
    build: ./iot-devices
    command: flask run --port=5001 --host=0.0.0.0
    ports:
      - "5001:5001"
    volumes:
      - "./iot-devices:/app"
    depends_on:
      - frontend
      - agent
      - db
    labels:
      com.datadoghq.ad.logs: '[{"source": "pumps-service", "service": "pumps-service"}]'

  redis:
    image: "redis:5.0-rc4-alpine"
    labels:
      com.datadoghq.ad.logs: '[{"source": "redis", "service": "redis"}]'
  sensors:
    environment:
      - FLASK_APP=sensors.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
    build: ./sensors
    command: flask run --port=5002 --host=0.0.0.0
    ports:
      - "5002:5002"
    volumes:
      - "./sensors:/app"
    depends_on:
      - frontend
      - agent
      - db
    labels:
      com.datadoghq.ad.logs: '[{"source": "nginx", "service": "sensor-api"}]'

  db:
    image: postgres:11-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
    ports:
      - 5432:5432
    labels:
      com.datadoghq.ad.logs: '[{"source": "postgres", "service": "postgres"}]'

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    
